<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Data 5)' inline='true' name='federated.13tux201lj6qj31al4khu1p3ecio' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data 5' name='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Hemanth/Desktop/Git hub/Tableu/Assignment Tableau/Data 5.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Orders)]' value='[Orders].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[People].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_68E4C71DA7BA4896A5BE8A288C592CEE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_68E4C71DA7BA4896A5BE8A288C592CEE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Orders)]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_95EEF557F1044CD588520B477D083042]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_95EEF557F1044CD588520B477D083042]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_95EEF557F1044CD588520B477D083042]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_E117E52F7D824BBAB7BDF85D488CBCC2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_68E4C71DA7BA4896A5BE8A288C592CEE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns1' datatype='table' name='[__tableau_internal_object_id__].[Returns_95EEF557F1044CD588520B477D083042]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_F5694B5F9D3440FBB2453C4478513B64]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_E117E52F7D824BBAB7BDF85D488CBCC2'>
            <properties context=''>
              <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_68E4C71DA7BA4896A5BE8A288C592CEE'>
            <properties context=''>
              <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns1' id='Returns_95EEF557F1044CD588520B477D083042'>
            <properties context=''>
              <relation connection='excel-direct.1txy4vq1hgk1f51amh8bp0ps3u0q' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Orders)]' />
            </expression>
            <first-end-point object-id='People_68E4C71DA7BA4896A5BE8A288C592CEE' />
            <second-end-point object-id='Orders_E117E52F7D824BBAB7BDF85D488CBCC2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Returns)]' />
            </expression>
            <first-end-point object-id='People_68E4C71DA7BA4896A5BE8A288C592CEE' />
            <second-end-point object-id='Returns_95EEF557F1044CD588520B477D083042' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1_D5109A1534894FFBAC1D47C3828877FD]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Sheet 1 (2)' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Country]&gt;' />
    </action>
    <datasources>
      <datasource caption='Orders+ (Data 5)' name='federated.13tux201lj6qj31al4khu1p3ecio' />
    </datasources>
    <datasource-dependencies datasource='federated.13tux201lj6qj31al4khu1p3ecio'>
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data 5)' name='federated.13tux201lj6qj31al4khu1p3ecio' />
          </datasources>
          <datasource-dependencies datasource='federated.13tux201lj6qj31al4khu1p3ecio'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</column>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' value='50' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk] / [federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk])</rows>
        <cols>[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{40D22DEC-450B-4D34-8EA5-02D7FC974CEE}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data 5)' name='federated.13tux201lj6qj31al4khu1p3ecio' />
          </datasources>
          <datasource-dependencies datasource='federated.13tux201lj6qj31al4khu1p3ecio'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</column>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' value='50' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk] / [federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk])</rows>
        <cols>[federated.13tux201lj6qj31al4khu1p3ecio].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0EDC7684-D749-491D-A537-5EC321C94184}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data 5)' name='federated.13tux201lj6qj31al4khu1p3ecio' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13tux201lj6qj31al4khu1p3ecio'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Returned])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</column>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13tux201lj6qj31al4khu1p3ecio].[Longitude (generated)]' field-type='quantitative' max='38920390.495898396' min='-4184635.8868962368' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13tux201lj6qj31al4khu1p3ecio].[Latitude (generated)]' field-type='quantitative' max='10204746.645885577' min='-15299059.431613358' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' />
              <text column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' />
              <text column='[federated.13tux201lj6qj31al4khu1p3ecio].[cnt:Returned:qk]' />
              <lod column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' />
              <geometry column='[federated.13tux201lj6qj31al4khu1p3ecio].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13tux201lj6qj31al4khu1p3ecio].[Latitude (generated)]</rows>
        <cols>[federated.13tux201lj6qj31al4khu1p3ecio].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A2FB8D5A-736D-453E-994B-D7D8A7EFEEC9}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data 5)' name='federated.13tux201lj6qj31al4khu1p3ecio' />
          </datasources>
          <datasource-dependencies datasource='federated.13tux201lj6qj31al4khu1p3ecio'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]</column>
            <column>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13tux201lj6qj31al4khu1p3ecio].[tmn:Order Date:qk]' value='73' />
            <format attr='text-format' field='[federated.13tux201lj6qj31al4khu1p3ecio].[fVal:sum:Sales:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]' />
              <text column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]' />
              <text column='[federated.13tux201lj6qj31al4khu1p3ecio].[fVal:sum:Sales:qk]' />
              <color column='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk] * [federated.13tux201lj6qj31al4khu1p3ecio].[fVal:sum:Sales:qk])</rows>
        <cols>[federated.13tux201lj6qj31al4khu1p3ecio].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D58B6A6A-F49F-4F45-BFE0-13EB77578444}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[:Measure Names]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Order ID:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B41A36E8-91BD-44F8-98B6-14B784170D36}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[:Measure Names]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Order ID:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E29EFA5-F76F-4E0F-AD0D-658C198483FD}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Country:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1F3C88E-28CE-4624-9D75-FF1C6064E358}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]&#10;[federated.13tux201lj6qj31al4khu1p3ecio].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[mn:Order Date:ok]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Category:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Forecast Indicator:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[none:Returned:nk]</field>
            <field>[federated.13tux201lj6qj31al4khu1p3ecio].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09A087E7-DAAF-474C-A330-A72EA9964556}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO19248kaXbXL66ZkfdLVXX3dM/OzHo0a+/aa3ZtY3wBDEaAjIAX/hw/8DeY
      FySQkPzqByQjkGFBeI1YfFkWeW3s9XqH7emZnq7ursp7RsY9eKj5nfoiKjIrsyqzOrMrflJr
      pjIj4/LFOec796NNp9PUsizsO+I4xmw2w3w+h+M4SNP0yjHz+Ry1Wg2apsnfjuNA0zQYhgFN
      0xBFEQDIMQBgGAZarRY0TUMQBFgsFqhWq/A8D3Ec3+q+NU2DpmlI0xT1eh2GYWA2m936vNuG
      up7q2hwyuO4A0Gg04LoubNtGrVaTY0zLslCpVNY+aRAEsCwrs0gkKhLZtpGmKWazGdI0RRiG
      QtR5xHGcIbhqtQrXddFoNJAkCRqNBmzbxnw+RxiGSNMUmqah2WxC13UkSQJN05AkCVzXRZqm
      hYSRZz71XoruyzRN2LYN27YxHo/lOtc987JrbAt8vvz9vw0MoL5P4PJZfd9HpVIRGjI3OWkQ
      BJjP56hWqzAMA2EYAgA8z0Oapuj1ejtbvCAIMBqN0Gg0Cr9XpTz/Nk1TJC2ZqN1uo9frIUkS
      RFEEXdfl3NcRZhFRqkyy7LdhGCIMQ8zn87WeNX+d685/U+QJv2hXPURomoZ2u43RaATgYv1c
      15XvXddFpVJBmqabMQAAVCoV+L6POI6RJIlcMEkSjEYj9Hq9LT3GJeI4FkI2DCPzXZqmsCwL
      3W4XJycnoiapv1WlHF+yruuwbRthGMpC8fObQN15bkOoeYbahCgXiwV0XUe1WpV3w/spuqf8
      DsfPeO1Dhrqzz2Yz0VLq9boI8NPT080YgBKV6oOu6xmJuwsJkiQJZrPZUums6tZ54kvT9Aoh
      JEmCOI7FXjAMQ7ZLHrfuc+SJZZ3dYFMUresy9WixWMDzPNRqNcxmMxiGAdM0oes6+v3+lXMs
      e87bMvGbgKZp0HUdcRyjWq3CsizYtg0A8r4pHGjzPnz4cDMG0DQNlUoFs9ksI1WobtTr9a0+
      VJqm8DwPvu8jiqIrxM1r8/MgCDCbzTL3S8bQdV10QBrKg8FAPs+fd9P7XPX3dcSkqlLL7mUd
      xux0OnIsVUU+XxFjLhNaRZ8fAkNYloV2u33FRq3VarAsC57nXdEgNtrvuTDUn7hItm2j0+kI
      x20L9Px4nof5fH7l/GmawjRNVCoVRFGE8Xhc+H2SJCLVwjDEYDCAbdvi9dk2VHVI/TsvNFZ9
      vgnyzKHruuxsPGcRoa9iqCLm22R3vGtQWHqed2X9NE2DbdtotVpwXVfUYgCb2wC6rqPZbMJx
      HMRxDNM0d+L9cV0Xvu9D13X4vi9uSuDy5TiOg1arhTiOxYjNwzRNeJ6X2Z2iKMJgMJDz7OKl
      5gkoT9j5z1Qmve39rFJtVn2/7m9UFWnfdoYgCFaqcH/1gx/gR3/9Qzx48BA/+41vQPM8L93E
      DbprpGmKxWKB+XwuBD0ej9FqtTLH2baNbrcLABgOhysl+Xg8RqPRKPQM7QJ5IlalsXpd9Zi7
      igusw2CqoFn3+F0xwiYCgcd2Oh1Uq9XCY9I0RRzH+PhHP8IHX/7y5jvATRDH8RXdqwhpmmI+
      n8N1XTFqiqQ6ADSbzaV+eeBip6L6oxrQlmWJ6zOPVefbBCrhLCOM/G6Q9z4te+7bYp1nu61N
      tC2HiGVZqNVqmE6n165HtVpFo9EQrWTVvZmmia/85E8CuIEKdBOs61qMokiIH7hUC/j/PA91
      XMKyLIlJqDAMA2dnZ+j3++IGo3egiAG2uSPkiZ9MqDKZ+nx5leKQ/PJF3rdNhYmu63AcB7qu
      Y7FYIIoiVCoVhGG4kvgrlQrq9boYvquIv/C6Gx19Q6y7PaquSPW/pmnC9305TnW/LoNhGDg/
      P0e73Ua/3xcbYDqdbnz/m6JI3+d/SfQq8ZOx+blqpB0qNjWYG40GGo0GarUa0jRFq9VCvV4X
      wVWEWq0mzpebqmB3wgB5qP75ItBfrx6vcnYcx2Ls5CUrcEH8QRCItwq4CIBQqk4mkx081eW9
      67qe+cfnIXHz/9Xny3tZijwZ+4zbMKzjOJn0Furwk8lEdmpN02BZlhxHhtlkXT7++OOMIAXu
      SAVaFwza5BcziqKMUZOmKYbDIXq9HnRdzyQ3OY4j6lEQBJhOp5hOp4iiaKdeHxWquqbec949
      mt8B8qkVyz57m1CpVDIePqoxk8lEgnr0NFLSO45zI5f748ePr3x25wyQf+lFyOvGaXqR2Ebp
      qUpZ7gyNRgNhGErOh+d5CMOw0ODNG6jb1v35DHxGdZcqkvD5KDf/X1WNdoFdPL967mq1Cl3X
      JecKgKg1i8UCvu8XvovpdIrFYgHLstBsNq/c703jTUWeoTtlAG79yzxCDN3TJdhsNhGGIWq1
      GhqNhqguhmGg0WjIeRjhZZYncGknLHu5hmGgUqlkkqSKUEQk6xqoqqQvIvCiY4q+2wXyDHlb
      5GMDvV5PUg7yz8+4Ed+h+l0QBPJOarUawjC8EtndJu6EAcIwhKZpGA6HqNVqK1MmmLrsOI5w
      bBiGmEwmojc7jpNJ4eZLrFarODs7uxIzyL9oqhTcSZapRkXR2ZvsHMvSD/K/vysVLX+NVUxX
      RHhF96ce1+12odaYFNkzRbEnNZpvWRaq1erObZ878wIxvz5JEiwWi6XHmqaJbrcrKo+q/qjq
      UxiG4iGIoghJkqBSqaDZbOLVq1d48eJFobdIJWbeR5E6xuNUNSQv5YpeTtHnqluX6t110dpd
      I6+Oqc+bf4a8ACgCP280GrhJgRVTVCjkwjDM5HVtE2p28Z0wgLrN0ce7CpqmZRLb8gUw1P1N
      00SaXuT585+u63jw4AGq1eq1kp1Qd4P8caskUJ5IVOIpYgLVK1T0d/6a10m/TaWjem/Lnm3d
      KHHR581mU7xtm4DvMO8ZvGlq+nUIgkDswjuzAVTDTvXaLAMlvCr5DcOAZVniLQIuuPn8/FxC
      3ADQarVgGAYGgwHa7XZmIZe9nLxKRNclg240VPPpC2rlUZHRmpec1+ndq+wF9ftlaQrUl4sM
      /3UJU7VH8l6oZc/JUsObqCy04dRrF3kDtwXHcWT33zkDqMEs1tmOx2N0u91rpSsJbzqdIo5j
      0S3zv2u325nrnZ6eotVqodVqYTwew7btQslEIleJTjWsi9SAZW7JZepQFEWYzWYZu2UdyU7G
      yhME/3FtitasKK+IQkONmBc9f37XLCLC/NpUq1W02+0b6+vUCNR1rVarGVsxf83bwnEcAHeg
      Av3bf/2v8Jd/8Wf44z/9v1jMpwjjBH/yR/8LZ4MRvvsn38FoMkMSBTgbDBFHAabTGb73h9/B
      f/2DP8C3fv9biOIYSRRCN0zoSPDn3/suTs8nOD19iThJpUxzMBgAuJTKzAFnGsR19oCqp19n
      5Kn/v6xQZzabYTKZYDaboV6vSz5LXv3I69+qupiXtOozFEWLKfmLGKBIcBQF464Dj+M6maaJ
      VquVibNsiiJGVv+7S+xsB0jTi6zO3nEf3/3e93Hy5AF++9/8R6D7CB0zwKMvfYjPPv0Ez8+m
      qEcj/PH/+QF+6Vd+HhPtEU7MAM2ajd/67d/CH/7pH2L6eopxNMW/+PV/hrpdw+npZ/irUxf/
      /Df+Efz5SF7K+fk5PM/D8fGx3AelYhRFEjNQiU51u6rfLfPN5/34PP9kMhGXHQ13ShngIrr5
      6aefolqt4ujoCL7vYzQa4fHjxxnmI/KxA7qP+SzL1hy4IHZVBdK0i+CRmgayKbGqa6H+lsZr
      u90WZ4Rt26I+rkPE+ffS7Xav+Pp3xQzGb/7mb/7LTROI1sViscCrwQht3UPgdNCotPCLv/QL
      iBYjNLonsCs22u0WkAAffe1voIoFFr6P3//27+J///V3kXZMTKtn0PoVWJ0Ik4GPntNG/533
      4Q/+H5LaYzw+aQuxBUGA4+PjKwlRtAeoo+YNTzXJTlULgKu6s8ogVEV4/k6nIzWnpmleMdyp
      qo3HY9TrddTrdVGPeG71+LxULtKLi+6PzgEey2CSmmi4TKVg8ZHneQiCQJ6PvykCGwywJNM0
      Tdl11zFkNU0T37+u65nI8K6Qpim+973v7bYewHVdjEYj6BrQbHehJRHOhhNYBhDGQM2pXGTz
      1RxMZi7+8+/+Dr7aOMfvnn6O0UmMMIhh2TouNLUUX9G+hl/72X+ImlOB63pfpERfXCtJEozH
      Y3Q6nSuGIu0A27YlN3+Zccn/LwpMqWBeDwn95cuXaDQaGWLOn68InudJrap6bkKV9ssM6Lxt
      oqpOtm2jUqlgOp1mvuP36nk9z8NsNpPuHnEcYzqdot1uS2mp+rsi6LoOy7IQRRE6nc7aLXcG
      gwHCMMTR0dHaO0d+N14F1WHx6tUrjMdjOI6zOxWIvXXYg8VxqhcNpyoXuqhlK9LOMDEdD/ET
      zjlmXoCxnUA3dFQc9WUBp+4LNOq1L6RE1tdMHXQymSBNU8kJUvXiMAzlfvIokvKX175M3lPz
      digZR6PRlfOuq2JUKhVh0HWYpsgDRJ85ffBUPyqVCnRdF+JXf5t/ZgAiIFSHQKvVwnQ6RafT
      WcmA19lN18GyrLXrRtY5v+d5eP78uQRfX79+jW63iy9/+cvo9/t49OgRgB3aAJp20ZtFVQUq
      lQriOJY+QgBgaAm+//0/w//479/C+fNnsN+pIH4YIPJMVKtG5nyjxRCz2exKpBeA5Pg/ePAA
      SZJgMpmIodhsNlGr1ZAkCYbD4doRxjRNJaEuTVMhrnq9LsEU0zTRaDSkKk3VXddhAurn5+fn
      sCxLcppoS+SNZvUzqmGu66Lf72OxWGA4HIrrN0mSTPZj3j2bP2fR2qqSfxmh59FoNLBYLK6s
      xyoYhpHx5t0WfJZqtYp33nkHX/3qVwuP2ykD5COCnucBgPRr0TQNv/cffgf//i9+jJ9tVvAz
      3/gF/Kfv/E8E488Q9d/BkydfuMEC4InxAb7+k99AFEV49erVlXB7kiSZ+IAqsXgtwzDQ7Xbx
      6tUrqScuYgRK/Pl8jsVigaOjIzkuCAIMh0NxazJNw7btjYsxCAqGNE0lc7Ver19hpul0Knq5
      6nfnP2ZOTiYTVKtVSQbMx11IxFEUyc5DJmAVHXBpEzmOI8cWIa8+Uhj5vr9WYIytTLap9/f7
      /fUM8K1dcQ0wojscjTAaj7EIAzw1LdSOe5g/6OL3vv1H6HRqSL7Ux0slR033LPzGr/5TNBsX
      xlwQBJhMJplWLNRd83pufhEMw8DJyQniOMZgMICmaWi1WleIlx6TfM65bds4OTnJ/L2NdjAk
      UjLfaDTCfD5Ho9EQA7PT6YiUdF0X4/FYdiaCrUGiKEKtVpPnZFvIJEmkU51t2xgOh/L7PLFy
      HavVKs7Pz9FsNq8INToV8kX9URRl2k+uQn6X2wbWPdedFsX7vo/PT1+gYlfw7/7bt1DtdfD8
      xz/E8+dnePjoGFM3RLfXx8s//zaG+gw/9avvwTAuiOJJ9D7+7ke/jlejIfqtNmpfSOAgCKSM
      7uTkZOMOFWdnZ2g0GleM0MFgcG2wblegtyeKInz22WfodruZGuh1VRHgsgjcdd2MbcB3PhqN
      MkEs1d6hUOBn7LBGNYnEr/7GsiwcHR1hOBzKLvYm1nBd3OkO8F++/fv4i2ABLQUq7zwCDB1P
      fuabePIzl8ekaYpOr4mx9x3oegpAAxLg1STAtz97imq7hafPfox/8gt/SyLETDKbzWZSPrlY
      LFCv16+kQqigHq+m7ZKw8hHSuwQb+I7HY7z77rsYjUZwXffGOw1b2QBX/flRFEkX7EajIc+c
      FyRJkqBWq0lKuu/78H0f1Wo14+mhIKHXbZ+JH7jjkshf/9t/B7/26F1Yno84TYQAmfMTxzHi
      KMLokzMsnn6A8Ic9GK+PUB99iG7/J1DttJECaKQafN9Hs9nE8fExqtUqOp0OHMdBkiRot9ui
      UqxqSDudTtHv9ws9D51OB+PxWIzIu3qRYRhiPB4jDEMpKOl2u9B1PfMsa2/xBXEPFXQOWJYl
      0fSiY/l3u93GfD6Xegrg0qaoVCqiMi6LqO8b7pQBao6DX/y5n8Pf/9pPI3UXV0L9aZpi/PFT
      BNExdOsxEq+Pb558Hb/2lW+ilerwX75G5dUAX3nvPenrSZ2WwScSvm3biONYgk50s9Go63a7
      eOedd5YarvTuTCYTNBoN9Pv9rXW/tm1b7jffnn4+n4tKocYUGOhT1+u20DRNmh0zOSwfU+Bn
      fFeGYUjNru/7GcM4r6bt2wyEIryRmuCv/9RX8b2//iEGWjbnHgBa7z3BiTXC1957jEcPfhr9
      /kXd75ceP4bneaKDjkYj+L6PJEnw4MGDwuuEYYgPPvgg47FhklWapoWtVFTU63UcHR3JVp7P
      CI2iSHaiPMEsI1Lq4EXdKSg1KfnV81AtUTNT89fZlDEY+CrymBQlyKmR6LzPnrlXPL7I+7NJ
      4Oqu8EYYQNM0GCmQJgm0nH5uVCr46L1H+PpPfzUTP+j1enBdF59++qn0d/R9H++99x5OT08l
      6kjC4AvgS6GbMIoiyVmhl4Lfqy+cSV78zHVdLBYLIQz2F61WqxiNRtKhmr9fxgQMEOZxdnYG
      27blftXW8xQQpmmK54dMXRQYy19b/Xs+n4taZ1nW2rsaGTxNUwwGA1iWJTZJvrAduFAv1ZgC
      mXtXOf43xZ2lQwPZFxHYVpb40xTQNGgAng3O8Ctf9HCfzWZwXReO46DZbOLo6AjT6RTdblfq
      AHq9Hl6+fCnSmrryw4cPRSWiGqHeR6fTwXA4zCTK5cGt3PO8jF5LBgEuVJrRaIRarSYuwVXh
      /GXZmqoKoa4fVTfVJTufzxEEwZWOCup9q+fg3zR2r4tZ5AWCOj2Huj4T9GijqNdjsNNxHInP
      7BvxAztmAObyM5+F6b7MhEwtA9B1aLqOn9BMVE0Lz0ZD/L1v/jyazSZm87l0fZtMJuj1epLp
      ORqN4Hkezs/PJeKnNsKtVCorMwoZ9Gk2m3jx4oW4U+lnV9N7DcO4kk1JAmEAq9VqiYeEXin2
      LgUuPS66rkvqAz9nysKytn5F0WB6ZIpGVhX9nipfEATXepPyzKMS/3w+l+i+aZpXvGxpmkpf
      VwY+b1MrsGvsNA6QJAk++eQTiVxSf+XL+PzlS8zmMzyfzfCP/+Yv4uT4WKTn93/wl3j+8hX+
      wS//sqQ1NJtNcbO9fv0as9lMAjm6rkvElvrpycnJFT1WHjz3kofDIebzOWazmWSVNptNkbpp
      epFuPRqN4DgOfN+X3KN6vY5ut5s15sdjiXgDwMuXL6UlSLvdluinbduSnPXuu+8WpivkvTLq
      MfP5XGYncLewbVuCjpytxl2kKI0kD16PahjzqLizfvTRR3I/eam+WCxEKFBw5Nd7n7BTBkjT
      FM+fP4frupjP52i320jTi/I35r2w+j9vND17/hzT2Qxf+8pXJCuR0q7Vaknb9KdPn6Jer+Ps
      7ExUkMlkgkePHuHo6Egk6nQ6lXbr+U5kSZLg2bNnmM1mqFYvkvam0yl6vR7ef/99eYmcUfDJ
      J59gPp+j1Wqh2Wzi/PxcVBSmIrOmuVKpSLfrVquFTqeT6RdEw55BoyJG3ZR42GM1TdOMW/I6
      5HcZuqZPT0+luOjRo0crVRk6FtRcpn3GziPB5+fnODs7A5BNSSURnpycFC7oYrGQxDPC932M
      x2PpGqxpGp49eybqBg3D4XAoQZ3JZCKTItkykYTGRC9u867rwrIsmXVG3ZU6bhRFCIJA7AFV
      rwYu8vx7vZ4E59I0xdnZmdQ38x44wghAZlcrIpbbEtB1XSjy16LNNJvNhHHJtOu0I/R9H67r
      Si7WvmOnNoAa5FITykhwJKyi/p5FqFQqoj6QiE3TFMLnDtBsNqUEkfn/r169AnAhoXzfR6PR
      QLfbzdTp1mo1PHv2DK7rSiT0wYMHcl9U4fKNbekeZD/Ler0OXddlWgk9VjSc5/M5jo+Pr6Qm
      34RgSNxFhrB6zDKov2s2mzLKlbETZqf2er21IrtxHGOxWNy4PcpdY+dGMI0lIPsiVC9J0Q5g
      23Zhf01mK5Jgnjx5gsFggCAIJMFLLbEDIC5KbstqvyGVgFiN1Ol0sFgsMtmWPB9nTVHvpgFK
      BgrDUPJgLMuCYRh47733MJ/PxW15dnaW8aPfxjui5uHwHtUYwnVNiHk8jVnaCWTq4XAIAJhM
      Jjg6Orr2XqIokuc+BOyUAUgcRS9BndZXhLxngSoDfe/qcWycpTIUy/II6vxkIp5XlWhhGCKO
      Y3Q6HTEW89Mn4zjG2dlZpuyQxA5cEFWn08Hr168lxdd13Ywa1Ol0ZGaxuivedAfI/13UwmUV
      mEfVarUQhmHGE+U4DiaTiQT88v011WuwraFq5+w7dm4DcMIj1QFKBxqWfGF0O/Lv6XQqPUFJ
      hJzynScUSn+1Lw1fRhAEqFar0k6ds4Ep2cigrHrif9UcetXmoFtXvQd6ovgbeoqo+lSrVdRq
      NTx//lxUoUqlgpOTk8L04jxWebDYYPYmKlSeSLnOHDrBa08mEywWC1QqlSu6/YsXLySNgirv
      0dFRpjHBPmPngTD645lNqOb/LBYL8VbkwYQr1aW3bO6TGkHluZgXT7eq2rGA9bs0coMgkF6k
      jUZDxqeqvUnZs1JV6WgLtNttYQIyLn37HFeqaZrsFCzcH41GQkxqZFXFdQYsGZLPQXUmL9TW
      sbP4LKr6sux41kSTyTmPwXGcg9D9iTtLhWCZYppeVDY5jlPo8wayeu067jv+ngY34wLAZaMr
      GqPchdReQYwEU+9lP/r8+Xk+qheqAQ9ceK7yZaB8niAIpICH3qJOpyOEw7oE9TdqXGEZE/Cc
      FDB5FYb3uazhlwoa7yqo11erVREIURRdBDK/CMgxt4q74KGoP8AdpUJQQvBFmqZ5Jb9d3cbH
      4zHa7bZI/3XBfqGrvuOWzlE84/EYuq7LvZAJ8ro/SzHZXa3dbmfUARaQF738MAxxfn6Ohw8f
      ym5DwqxWq1KwzfVah/AJlWkAiGGvRm+5C+Y9V3nMZjN0Op0rzE9vHR0IdBczmEdGOAS3Zx47
      ZQASWxAEmTpTy7KwWCyueFgI9u23LAvD4TATZMq/ONoPav+aVVgsFhiNRhkmzNfM1ut1DIdD
      MeY0TZPIMu9V9WJxx1DraQkawZzizjiD2rUhP9x5Xb/9KqjJa0A2GW0ZoVJY5ddDDRjO53PE
      cSxTWtQuGYeInTIAp4CokodldWrmZh7ValWimZ7nod1uYzKZQNMuO00QTAojQVEaAcVpyYPB
      QFIZTNOU1AdVeluWhW63KxmN3AlUP3je/87rkQlJcBzIzeelA4DRcO42zAW6LeGrDKiWK6qM
      oKZUq/eepqkIHtWrpZ6PguYuevffBXbKABxxqXZci6II/X7/2t/W63W8fPlStmS+wOl0KkUk
      arg9TdNM410a0EwA4+4xGAzQ6/UQhqFIMTbVYoc5VR1js1kSkmrEqwRgmqYUsQOQYpwitcjz
      PPT7fVFPHMfBixcvcHR0lHnWTaGqTmQq3qfKBOqaqeqR6iIuAh0R6zauOgTstDcoF5qNqdL0
      InUZgGyljBVQv6SE5ALnOyrToKTUz/fT5EvN5/uT+YALfX2xWGQCUZ1OR5Lh2NeGwa04jiXD
      kcTFe+F9zedzNJtNKT6nQawSIdUhNfVBtT/Ozs4kELUq6sq1VTvT5e2G/G/VXTgfe+C7IaOo
      ddJ5HEqAa11shQHyC05dklKw2WxK+V/eT69pmrQH7HQ6OD09xYcffggA126zeX27SDKpwTFd
      vxie4XnelUIQ2hm0EUgEJNYgCISBVPWBz95qtUR/pktTDUhREFDdUndGTdOwWCyE8KfTKVzX
      zaQaqwUys9ksM2COLU9UMO8qHw0mIzBfibsoP8/HOPJ4WyQ/sZVAGBePL5IBKOBCMlLqZy6s
      XVZaVSqVjGTh+UajkRiP64LVSsw8pZuTHhfLskSarwP2DIqiSLpQqBJXtWPI0PTy8FjOvmIm
      q7ojqCBhAxexDRL5aDSSyPRsNsPx8bHkQp2ensI0TfR6PXHRFkl/9X7z+VeqetRoNAoLc95W
      bGUHUL0EQRBA0y6HoL18+RK2bV9x13HB1YhwHjcpqmbKweeffy7+ad/38aUvfUmK5tmvfx3Q
      EGbxB+uQK5XKlbE+TKVQYxyapmUyKlXiV48BLoiP9zwej0U9UfuaMoEvTVNpg2jbNjzPy7Q1
      UQk4nytE5HcHJr/dF+IHtmwDsFaXuTLARVliml6kBXc6nRu3D1wX7NRGiU9mpCRmOjS7IVyH
      NE2FqRjpTNMUL168wPHxsRj6rDXo9/uScsGKqEajISnWeeIs8iRpmiYFNizHBLL5TNPpVDq1
      TafTKynVqk2gYlWekHr++8IEW6NGSingMg1B/Q64zJFZN2hSq9UwGAwKW/Itg67rsG17aeYi
      BzCvywDAZdUV4wDMladdw3vN18bato3BYCC5NCrx0+DXNO1KexGVAOl2PDk5QRAEOD8/x/Hx
      sdgoTO9mYA+4dGnmI+3LmAKADLjjfW4SgDxkbI0B2M+maAQqfeitVgue52WCTKvAFudnZ2eo
      1+twHEdqUvMq1XVg5DKOY0k/aLfbGI1Gco/LwN3j+fPnqNVqGI/H0jMoHxBSwQa2LBxXr8Eh
      FDRq2+22lEjymvzHc7AQh3XQdNNWKhVMJpMrLczZJFc9Z14Fo/HPijz2WL0v2AoDqDN7fd+/
      0uZadVfyhah+9yIwiqzrOh4+fCgZm4wkDwaDjN+e4MT4zEN+YcQyJYPDG5iZep3nA7icLDga
      jbBYLNBsNmUAXlFzXaLZbKJSqYjhTcKr1WqSpcqIsJq3BFwGrdiW/eTkBKZpYjqdym/oBeKM
      3clkAs/zZKcdjUY4Pj7OMCh3lVqtJsyr2iFvm6tzFbbCAJ999hmA5T5o4GpEsdvtYj6fiy6r
      gmV1dJ8Clx3JKP0qlQo8z5N2JDS6STD5a5OYaCiyqswwjLW7GOdrielRWUUwmuATC6sAABXN
      SURBVKaJr56eGwbm1MBTPjLL+2k2m2I7sN6Zkp7RY03T0Ov18Omnn0rGaaVSQbVaxYMHDyT+
      wpRmJgsWPW9eoLzt2AoDPHr0qLDZk4oivZMzstR+/67rIoqiTEsRFerWzQzF+XwO13Vld1h3
      KAMACXStswsAEC8QCX8dlyFVIADSOoXPourrKhPy+fL1D0+ePBGbgruq53kSYGOLeCb5PXz4
      UAxkMv0q1fM+ET+wpd6gt8n/bjQaODo6wqtXr6S7wqrWHUXtz+v1OjqdDqIourKbLAMLcEjE
      y+B5HiaTiRT3J0kisQmqIZsgv1uoxqpqxHLOcf5ZWfPMXY1R5263i0ajIe5dJr7RE8Yo93XY
      RiLeIWErDKDWoC7Dqu8ZBW42m9d6H5adQ1U11oHv+3jx4gUASHIXSxfpz2fVWKPRkC4RNMzz
      MwXWRVGdQV4doUG87FlYaKNGuWkQ+76PyWQCwzCE6Glz9Hq9axl2PB7Lb+4DtqICLRYL8f2z
      UawK1QguauyqqjWrdPFl83FvAubg83r1el28PLyWalsAEMPyOjViFfJ1BurnbI94nQqnukhr
      tZqoQ7VaDY7jSM2C67p4+vQpPvzwQ0liWwUGxli7fB+wFQZgx+Y4jvHixQsZIgdcGnP5CeZc
      aG7jLBRhDktRwIiVVOpnxHWRXVXPZiGHrl9MluGuc3x8LLUFeQJlivRtdWTWDqgeoTRNpd/m
      uoxF+8A0TUm5Vu/NNE1pZ/Lxxx/jo48+upax6Ca+izm9+4KtMIDaCq/X62E0GqHf7xe+zCRJ
      pCDF8zzpNU+mye8eVBGYpQlcEjN3FUZrOSN42T0SHAbNHqWNRgMPHz7MTFhnOjGr0rZV5sfd
      RjWGAWzcSkR1u7LEkww1n88RhqG0KWQhy3U9RKkKcm2L8oreNmyFASaTiZQLcuiEmr3IRfQ8
      D4PBAA8ePMg0nO12u6J/A9koKQBJbTZNs7DjmOd54mLMJ6vlQeOROj2v9/nnn+P4+Fhchfy3
      CwIoksTrJucBV9MnTk5O8KMf/Qj9fl+K5FutlggVRrKvA4UNAFmHTWeuHRq2wgDsHjYYDKQN
      IgMz7NvPIM2jR49kQVlE/emnn8K2bTx8+BBAdkicKhWfPXt2RS8HIOWNqxLrptOplC2GYSj5
      QvTFs2OzOgGSUMs5twHGBFgnrWlXR8pe93sVTPVmnILReMMw5LnXIWKqYvwtVaK7GqL4JrAV
      Buj1eqJT55OyXr16Jf122NaQEV0Wj5ycnEh7FFV6qw2sXNdFq9XKDF/mcUEQSPNZ2hBq5RYA
      GdsZx7HYEar7Udd1jEYjySFibhPtk20OcWaAi8KCHpzbQK3Uevz4McbjMYbDIXRdR6/XuzZe
      QbWHniS1U8bbjK2lQ9dqNTx58gSff/65dFGu1+sicavVqqQP09vheR4sy8p0WVsGMgt1VOBy
      EAMT1dhGnfntasVZq9XCeDyWVOK8VG+32xgMBhKL4HOpHpdtgl4fpjnfJgszTdNMmalt2+h2
      uzBNU97DdcSvOh+4Ruu0Ujl0bC0Zjts43YSnp6cAII1o1YmC4/EYhmGgXq/DdV3Jp+H3lMj8
      m3061X6aSZLg7OxMshgBSN6LasjlCVc1HvO2ApmAUVi6RG/i718HtVoNnueh2WxKbtRNrsUd
      kjEKvotWq7WW+kMCV6U9EwBZy7DrNPY3ha3ub8xJoYFLr45q9LG9Yb71eX6BaQP4vi999h3H
      wXg8xvn5uQx3U/XTd955R4zpvFpBd6sq3VXXKJmu3W6j2WzC930ZG7qr1GBmpPJebhqAYnMs
      jiVSP19HcufXiu+N8YVNDPRDw9bZ2jRNHB0diauPQ+nopaEBSuOT2zVfID1BYRhiOp1mgmuM
      AyxTRzRNkzaF7AxBsFiFE+CJIoKj7s+ZA7vSg1XirFQqG1XAqUFEqqAff/wx0jTFBx98sJbE
      5vtgQyy1m56qlr6t0h/YYXPcNE1Fii4WCxwdHUlDrDAMJe1BJS7mutNvnXdDTiYTMeaYLk21
      i5JfNeT6/b4kgJFQqHLR26MyABPx0jSV/kNFI0T3AdwxuJOaponJZCIFRNdNf4yiSNQ92mhF
      NRpvs/4P3EF3aEZ81SDMqkVVUyam02mmwIbNskzTlHFJ7NfPDg48bxRFMtY0DENJHa7X62g0
      GplmtyySYZo1maXf7++19IvjWNS0brcrAkTX9cx8tCJMp1M8ffpU6pvff//9ndk6+4ydv11G
      U1WsejFqqz0SOqOc6mR4doKjGpUHVackSUTt0XVdujN0u11pprtYLDLETlVq3wtDWFcxGo1w
      fn4uqiR3MjW2oKaBzGYzeJ4nTQKKJmrm8bZGhvfWycut+fz8HIZhYDKZYDabQdM0KWpZRzqr
      OfCU9owHkMnomqX3h8b1vr9sCgUa0px5zAoxVb0LggA//vGP8erVK5yenkp/Ulabcbdk8IuC
      hi7lZW3sDx17u79TYvX7fViWJQOyGZBa1zCdz+dyDrpTARSqY47jHGRbEGaFTiYTIdx8QdGL
      Fy/gum6mEUAcxzg/P5dIeqPRkH5KFBhFbmOu2aGtUxH2mgEovYFs1zd2dljnHEzRaLfbmM/n
      V7on8Nz5HPtDAYmyVqtlJljmVSAmEqrpFwCkqN40TQmGhWEovVV5fu6IbI/OThRqq/dDNJj3
      lgEYzImiCOfn5/JyuD1fN+0cuGhfQkP55OREZne5ristDIGLVI5D7W8PXCb4qbEApocz0t7v
      9yWOkk834Tijs7OzTBsaBhNZ/snfsLu17/twHEeGaLPPKQVK0XqqatQ+rPdeM0C73ZbZAvRq
      sJXiqoxPFdT11aCW4zgYjUYyC2sbef5vEozisrMbW9Rw3hkj6NVqVVzEmqaJ9wy49L41Gg0E
      QZBJPWdgkc4IZsq6rit9TPl7upmPj4+lQL9obdXeqG8Se8sAwGWppOu6eP36tbQSzw9wWAaO
      DHIc50rXhXa7LUl5b/olbAPUyVnfzCYBapdptbd/ml5OkScDUThwZgLVTzIJdwUAMliE6ihV
      K+ByVjA9TcxL4n2maSpu7DftZt5rBgAglVI03jhRZZ1dQG09XnQcjb63CWQC27ZFXSya4pI3
      YpmirXrZ8r9R/6baxV6rVFXznajDMMwMD2dXDRYAqWrWmxBEe88AAKTfJos6mNXJJlhqg6w8
      oXMHWMYo+ZqDtwF053LwB+ubDcOQsbFFqc6btJMBsjMHGFMoymeiXaKmsajJjurchbtmgr2N
      A6jQdT2j9jiOIykWnLQIXJXylID58kMVb3OiF1VIBvWY2Oa6rpSEqsNEOByDRMm/89VkXDN1
      LhuJWI2fMM+LqiiHmuSzTtWB6uq86LvAQewAedi2nSmOX5ZLP5vNJJGOxSEsPKcKsM1OE/sI
      qjaEmtmqFgvp+sWcYXXGwLNnz1CtVq80Gi6KwTAgR+Zh/1Z1yAinfxaNoVV3BBbj3AV2ngu0
      LYRhiLOzs6XZm+yxqW6jXHDgYmHZT1QtEGHi2zpu1bcZaj01yyGZxasKlnXdmHkbIkkSiVGw
      PeOy3/HfXaimB7MDUGctShlmlPf169ewbVvKA/Mvi1NXuBWnaSrtBO878lHfZWNnma5OQ7bI
      wGamrtrhL6/GrrqPu7QDDoIBmIuyTF+n5GJKL7M72Yq92+2KbsuuzMD1i83r0n9e4mJN1C4T
      XHc1ik43J7tU7zMOggGYwbjM7Tmfz0X/BC6nwqvq0HQ6FX83fdy0G5Yxlu/70lXhvjIAXZmM
      ARTNV1vWUZp1BvsSZyly7R4EA6jjTlUmyPuxgexDVqtVTKdTqUtmjQCQdfkVMQD76ZAA7mOu
      fJIkEhRTO9qp7k8Klfzv2LCAiXm3raqjoX6b8xQx4kG4QVVPDRdc9eRwAAb/Vo1gSnnf92Ug
      RX5YhLpNR1Ek3aCZArDv2/i2QU+OOu2T9dlAVnVM0xSj0ehKPTKPoSv6tqBhvs69b1JaehA7
      ADsWq9FCpkUwtH9+fi5eII4xUmeL8WW2Wi2JQnLskqreuK6bmXVwH9UfqpyrXMSqNOVOwUmV
      HP1EhuDnt0HeSC8C4xab7BIHwQCsJ1YlDLdYJl/Rw8CmTkUVXQzUsFlUkSsu7814W3KFNgEb
      Gdzkd5y5BlyuJT1Ht8V174Hva6Meq7e9qbsAsw85LhSAqCbU9amjs3tEHpRILIdctkh56XGf
      dH9GhDnwO498sHGdaC3VoNlsJk0QdiVQbrJTH4QNoGmXkxLXObbdbmMymVwpCbRtW9SfZS84
      b28UMcBdhup3Dc44nk6nGI1GMkVGtafUjNEi1/E6vnvOc9t03VTbYxc4CAYAICH1vISez+eF
      L6RWq+H8/Bzz+VyKNUzTXLmYqpeI13xbe2PSVz8ej6WdOrCemqEKADU7NM8sRd6hvLF8Haj3
      0xjfNg7m7VIa5xe1qCsEF5ptGoMgyKRFL/NK5F/+Mh/2XUcrdwG2PdyEGFlozzFMvu9jsViI
      46DIbsi7qpmIt8l1uXPvAgdhA6xCkV7KMDyZpdVqYT6fo9lsrky55VAMdabx2wpmXa4L1gKz
      GTEAmSzPJr/sqKGC11CvxV32uqa9xC6FzUExQJEbbDKZSME7X2qtVssYW/y8qBudCtoPHJv0
      tqo/wIVUVdW962AYBp48eVL43bLimWXHARC1dN3qvl3hoBiAvuD8/LHJZALTNKU/jpqgxTaL
      URStNSiOHqe3HVy7XRvzaqp6Plq/D7UYByfiGA/gYjabTTQaDdlOVSOMYGHG2yzRb4JNIqar
      UJQOoX637LN9qMU4OIrgXLHBYCBjjVT3qBrGZycIzvk9dMN1m2Dfn23sAKwjXhf0Iqk5Xm8K
      B6UCAReBqnfffVcijpPJBMPhUEaf0ijjThAEATqdzhvXNfcNmnbR3iTvXryJkEjTdK0p9DxW
      7S73pnFwOwCAzKBqVhexcomtPeg2Ze+ffVjsfYNahpj/p2Z9EqsCgMs8Zvm4gYp96L96cDsA
      cPHiOFZI7VqsxgPa7TZ0Xc+4Q0tkwRRnZtICxW5L6vgUPIweq8cU2RMqIxUx2658+5vgIBkA
      uJReHKFUr9dlYITrunj//fel33+J5VglgZlZy3JU9VjHcRAEgRQaUZ8vyhXKXyNNL8Zm7cO7
      OVgGYNCq1+tlptJz+mJZxng92CqeyLuQW63W0qg3d1zWWFSr1cIIbxHxa5pWOPD8TeCgGYDj
      kvJtNvZhYQ8BVGvYppCjltaFamelaSqFSctA4mdC4m2hGtM3fecH0xalxG6wbpuTVWATrVX5
      RWoOVqfT2Yr6Q+/TupnCRSitw3uOfBnpTcBMW+4GeajEzx1gG9A0DfV6XTqI3wQlA5TYKhip
      V/+xJY06dGNb4EAPZqNuGl0+WBugxH6iUqmg0+lIIYvjOHBdF7ZtXxlPtQ2Qwebzucw73sSO
      KRmgxNbBqTzspqHGZ7btoAiCQKLZN3F7lypQiZ1CNYi3mf1Ju8K2bXQ6HekOsimDlTtAiZ3C
      8zwpQ1XVoG1gOBwK0TNmsSnKHaDETsGGxL7vbzUlZbFYiPrDfq83YYByByixU3B4HwNl2wCn
      UpqmKTPRboqSAUrsFEx72Ea/f3brZt+ier1+63OWDFBi59iG6sNmB2y7uK1Ex9IGKHEQYAsW
      YLvR5HIHKHEQME0T9Xpdpn5uK55QJsOVOBhwpO02g2nlDlDiYLCLyZGlDbBjsOHum+5+UKIY
      JQPcATgetMT+oVSBdoxNe+aUuFuUO0CJe42SAUrca5QMUOJeo2SAEvcaJQOUuNcoGaDEvUbJ
      ACXuNUoGKHGvUTJAiXuNkgFK3GuUDFDiXqNkgBL3GiUDlLjXKBmgxL1GyQAl7jVKBihxr1Ey
      QIl7jZIBStxrlAxQ4l6jZIAS9xolA5S41ygZoMS9RskABwxOYSxxc5QMcMDwfR+e58nfSZKU
      TLEhysZYa4JD2eI4hmEY0HV96xMPb3JPnL/FSe2GYcAwDFiWVdhLk8dxuPVtrw9sf/LjXaJk
      gDUQxzFmsxniOJbPGo0GLMva2ctP0xRhGELX9UxHZFW6c0I6++bzXoGLdoy2bcO2bZimCU3T
      kKYpptMp4jiWIROrJqxwBi8AOW6xWIgw4G5TqVRgmubWOzffBcr26CugvujJZHLl+3a7fesR
      PUXIMxwJOQgCIV6VOK+Druuo1+vwPA9hGGa+sywLtVoNhmFII1/f92GaJnzfl+dvt9tL14Ew
      DEMYgbOBtzkYbxcoGWAJqE7MZjNomibDmFVomoZKpSITCm8r/ZIkge/7iKLoCqHuGmSq2x6T
      B9fnNoIiTdOd7SwlA+RA1YNTCNdtbc6xPUmSwDRNUTtM00SSJNcSAPV513W39Sh7A9u2Ua/X
      b0zEJQPcAdI0hed5omZsE5ZlrRznGYYhFosFoija6nX3CaqqReyDEX1vjGDq80XemyiKsFgs
      dqZ2hGGIIAgQhiEsy8oYz0mSYDqd7uS6+4QwDDGZTKBpmhj2vu/DMIwbT3nfBt76HYCGHQBM
      p1PYto1arSbGWRRFKw27XaDRaIiRGAQBZrPZnV5/32BZlhj6d80IB7UDhGEoPvh1kKYpZrNZ
      RrIHQYAoitBoNJAkyRuRPHEcI01TLBaLTCDrviIMQ1EDHcfZyvzfdfHGdgBu+5yekifEfEST
      c2Jt2xajqFqtwvM8VCqVzNxYSv0it5+KSqWCOI7vXPemYVyOTSpGq9XayUC8ItwJA5CYSdBB
      EGSGHtMHbRiGGKD0P/OYVZ4YnsOyLIRhuJGPvMT+wTRNUYl2HUfYKQNwa6OULXNUSmwCy7KQ
      pilM05TUjm2rrDthgDRN4bougiAoib7E1mDb9tYHDu5kf3FdF77vl8RfYqugx2ybttNWGYC+
      9rsO45e4PwiCAJPJZGvCdWumNt1YpXejxK7hOM7WbIFbMQCJ3fd9yUsvUWLX2KaAvTEDqLnl
      JUrcJdSYz21xYwZYLBYl8Ze4UzDes80ajBszQGnolrhLMJt029iIAcIwhGmaiOO4lP4l7gyG
      YaBer+8kKrwRAzAfpyT+EneJXRE/cAMV6G0u2iixfzBNc6cB1YNKhy5x/1Cr1XaaGbrfJfsl
      7jVY+7HLHaBkgBJ7C13XpffRrlCqQCX2FpZloVqt7vQa5Q5QYm9xF1VhJQOU2FvcRb12yQAl
      9hZ3kVVcMkCJe42SAUrsLdSu17vaDUovUIm9RRRF0s2PJbZ5u4D9V3Vdv1G6RMkAJfYWlmVJ
      O3jTNFe2kNR1HY7jZFKl15lXUDJAib0Fezzpun6tCpQkCebzeeYzZpGucqeWDFBir3Gb5Ms4
      jrFYLGQ+QZGKVDJAibcabM4GQPKKaC/oul4yQIn7A6pRakHXwblBVw1VKBtxldgUB7UDzOdz
      DIdDVCoVmeFFD4HrunAcB8BF3xj+f4kSq3BQDGAYBprNJgzDQJIk8DwP9XodURTJ+J2iYXYl
      SiyDNp1O03X7rLztc6xK3D/8f7BbZs/OUc2kAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd2Ad1YHv8e/cfq/uVe+9WpZ7oRljm04KCSkQEjYhm2wam2R5lLd5KS8h
      2ZC83WzKZiGwCbtJCCGQ0DFgMOCCbdxt2bLkot77vbq9zMx5fxgEsmS5ydKV7/n8JU09I81v
      5pyZMzOKEEIgSQnKMNMFkKSZNCsD4Pf7Z7oI0gViVgZA07SZLoJ0gZiVAZCkqSIDICU0GQAp
      oZne/cHv98+aunUwGJzpIkgXiNEAOJ3OmSzHGUtJSZnpIkgXAFkFkhKaDICU0GQApIQmAyAl
      NBkAKaHJAEgJTQZASmimU09y/gW9blo6unClZaP6hwgJC8XZLprbeygqn0Ms5CUWDpNbWIzJ
      oMx0caULSFwEwO5MxqR0EIt40YwukvQQnf0e5i+YS3NLL/0d9eRVLMWoHO8Jqus6qqrOdLGl
      C0BcBCAajVJWUUVdfQNWq0AnhsmoEAwEEQYjOfmFBH1eUHIxGo0YDAZMprgoujTLxcdepKs0
      t3VSUTUPLegmJCzkpifR0tZFeVkZkVAqitCIqjpWk2y2SFNHmY3PBI+MjMi+QNKUkIdTKaHJ
      AEgJTQZASmgyAFJCkwGQEpoMgJTQZACkhCYDICU0GQApoU1rAITQ6e3rY/vmDYwEo9O5akma
      0PQGQFPZuWktnpBOV9/Qe8OFjnt4iKiqEQkF8AfDCF3D7fagC0EsFiMWjaDPvl4bUpyb1s5w
      itFMsjOVvKoqMjJSR4eH/SMEw1G6eo8gYioakO60oRmMDPsjKFEPwaDKvAXzprO4UgKY1gAI
      LUbAN0h3VwcxzGQm2wGwJjnxd3SRn5fDoDuGVQ/iUwU1VUU0NffQ3XyYogVXoCCfB5Cm1rgA
      HNy/G4srk+qK0pPMouLzRolpEdLT0s5oZe7hIZIzi2jv6mX5RZeMDu9vbWQkKnDFDKj+fvzC
      THG2i9raQ+QUlVNes5SIr59odhpWk3weQJo64/Yin99PVko2jU2NZDit+IMhOt0amUkQjkbI
      zMvD1x+ktfMoy+ZX4TZkoQT6iQRHcKZl4RnoRzcnsXTh3HErG+jtQpiTKMh1EI2qYDcDkFte
      Q+470+RnZ4xOn5lX/M5PsuuzdH6MawSnZuZSVVZMNBrF7/ehqiplc+ZiMdmomlOJGg6gYyK/
      oJCMFDuRSASfP4DNmUJRppNBXxhXkn3ClVXPX8JQ60EaW9rwBCLnfeMk6VTGnQGKCgoAKMjO
      YNgXITsnDaNNQc/NxmyykpmRQ2qKgVjYxLDqJEntJamoiCSbBYPNwYLKIlRT0klWJyivWUjo
      aBcI/XxulySdlnEBcLlcAKRk5JCS8f4pj+/Udvs7s7iOH+UzUl1j5s8pKOZk2jq6qaqq5mjr
      MJlps+tt1NKFaVpbkq0tRznkC7BqxSI6ewZJrcifztVL0jjTGoAFc6sZjhhJctpwZsqGrTTz
      5EPxUkKTneGkhCYDICU0GYBZYBbWUseI5/LLAMS5QDjKwy/s4XDb4EwX5aw0dQ/z40c30z3o
      m/Z1x9RTf/VUBiCODXqC/ORPb6EAL28/NtPFOWMeX5iHn9/DyoXF/OyJbexv7J22ddc19/OV
      f19L14B3wvFCCJ7fciQ+AhANetm8ZRuarnOodh979tcx0N3Gvn376Brw0N7extHDDah6/J5K
      p5IQgoa2QX765y18+poFfOnGZfS6/XhnUfeRaEzjwed28cnVNVy9rIzvfPYKnt5Yz7odjef9
      uQ5fMMLvX9nHbdcu5A/ratH08b0O9jf2sb+xN34ugx49Uk9FeTFNHT5segCfJqipKqGpqYfu
      ln0UL1xNaW4auq7j9XpH71hfaHQh2LCvjQ17W/nHjy0nP/P4dj6z+TAuh4XrLiqf4RK+RwC9
      Qz7SXXaslvduKQkBv39lP8lJVm5eUzM6PBRRefiFPaQ6bdx27QKsZuPUl0kIfvP8HuaVZHLV
      0lJ+++JeqgozuGppyeg0I4EI9/9pC3d/6tL4CEA0FGDPvn1U1cynu60dFYWsZBsRHQy2FIiO
      EPRHqJ6/ALNRmbX3AcJRlT+uq2XIG+Qz1yygNDcVRXnvgx9tvR4ef/0gToeVv//AYlwO6+i4
      wZEgv/rbdn70xaswzPBHQoLhGDvqO9m4vxWT0cCQN8TiihyuvaicouwUXtnRyJH2Qe68+dIx
      2weg6Tovv32MN/e1ct1F5VyzrGxMeM7Vpv1t7D/Wwz+9s25fMMIP/7CJ792+mlSnDV0X/PzJ
      bVy+oIiVC4vjIwCxaBh/IITZYsNiBBUDdqsZny+A0+VE1zQUBBhMGA2zMwDBcIxf/m07NSWZ
      VBak88zmBnLTnXxidQ0pSVae2tRAfWs/t169gIXl2eN2HCEEP/zDJr504zIKs5LPSxlVTcdk
      PHmtOBrTeHpzA7saurhobj5XLS0lN91JJKax63AX63c3YzYaCUdVvvu5VThs5pMuy+MP88LW
      I9Q193PTFdVcOq9w0nWfjn53gJ/9ZSvfu301KU7b6PC36zpw+8N88NJK1u9u5mjHEP/48Ysx
      KEp8BOBMxUsAfMEIdqv5lP84ty/Evz6+lRsuruDKpaUoioIuBDvqu3hmcwPhqMo1y8v44CWV
      kx4NN9e20dHv5e+uWzil26ELwbaDHTz5Zh1f/shyFlXkTDjdX14/SFTV+dRV87Bbx+/cQgi6
      Bn2kJFnHnL0mM+QN8tcN9Xh8Yb5203LSXBN3pT+VmKrx40ff4pNrasaVXwjBTx7bwocuq+Tx
      9XXc98U1JNksoyNnHY/HM9NFEG29HvG1n68VDz6zc9LpOgdGxD8/tF7sOdItdF0fN17VNBEM
      RyccdyJ/MCLufuBVEYmqZ13uEw16AuLfHt8ifv7kNnG0Y1Dc/cCrYsQfHjfd0Y5B8d3fvSGi
      salb97t0XRfbD3WIux9YJw63DZzx/N5AWPz6qe3i8dcPnvTvuLO+U9z2o6dFQ+vY5csAnIW6
      5j5x729eEy3dbvGjP24SB5v6Jpxu0BMQdz/wqqhvPfN/6sn85tldYn9j7zktQ9d1EQxHxbod
      x8S9v3lN7KjvFJp2fMdZv7tJ/MdT24X2vh0pFImJb//X66K1x31O6z2Vzv4R8a2H1otXdzYK
      TdOFqmpiwBMQWw+2i2ffahDN3cOj5Xx3O979X7yxp3nMuBPpui4GPIFxw2UV6AwdaOrj0Vdr
      uetTKyjIdNHRP8IDz+zi/i9fPaYqFImp/PSxLXx4xRwunjt13b7rmvt5dVcT99y64oznHQmE
      2XOkh71He+gb9jOvLJtbrpyH024ZnUYIwb/9ZRurFhVz+YIiAP68/gA2i5lPrJ47rm0y1QLh
      KI+s3YvbF8YbiJBkt1BdlEFWahJ7jnTjD0W5YlExl88vYv2eZg429fGVjy4/63aRDMBpEkKw
      5UA763Y2cs+tl5P+zhsthBA88UYdNouJj6+uGR32h3W1OO0Wbl5TM6U7jarpfPd3b/L9z68m
      6X077vvLuetwN09vqieqHr/+ffyikYLFbGRZVS5L5+RRnp+GAhOWze0L8S+PbuY7n13F4EiQ
      P792gO///RrMpqm/bDkRXRe09XnIz3RhMRlHyyiEYMgbYtP+NnbUd7K4ModbrpyP5Rwup8oA
      nIZgJMYTb9TRNeDjm5+4hFSXbcz4cFTle4+8yb2fvpyctCQ27m9l79Fe7rz50nO+sjGRJ9+s
      w2m3csMlFWOW7w9G+cO6/QTCMb7wwSVkpLwb0uM7j8loOO0w7j7czbqdjfhDUe646SJKclNP
      PdM00oXAMAUHloQNgK4LBjwB2vtH6Ojz0j3kIyctiUvnFVKc896ym7rdPPTcLtYsLuGDl1Wd
      dIfefbibDftauPnK+TzwzE5++IUrcTrGH6GngtsX4hd/3U4oEiPFaaMsN5WMFAfrdzXx4RVV
      XLW07JzvFQgh+P0r+8lJc/LhFVVTVPL4kxABUDWdXz+1gz53AFXTEQgUFFKdVoqyUyjJTaUo
      O5muAR/b6joYCYRZWpWHruvUtw7w1ZsuoiDTNenRUwjBL/66naMdg3zns6vO+xFTCIEQMDAS
      oL13hJ5hP5cvKCIzxTGl64CJq0kXirgNQMAzSGNbN8UVc4iFvKjhMNkFRZjO8kZYOKoihMBg
      UDAaDBgNyoT/WCEE/lCUfcd6CYZjXLm0FNtp3qkcCYTpHQ5QXZRx6omluBC3AWg6eoyS8mKa
      W3sZ6DxMTtkiKkvygPi5ESbNfnHRG3QiChqhUAihGMjKzSUU8BOXSZVmtbh9wWZxaQnNrZ2U
      llcQDaei6CpRVcdqitvMSrPQaBXI7/ejaad+giYeBINBHI6pa+xJiWv0DOB0zq43tck2gDQV
      ZH1CSmgyAFJCkwGQEpoMgJTQZACkhCYDICU0GQApocXFneCg101LRxdpWfmogSHCuoWi7GSO
      tXRSWllNLORDjUbIyMnDNMOvBJEuLHERALszheSkYQK+QXTdjpkwbd391MyroqW1h5H+FlLy
      KslWQNd1hBCz5q61FN/iIgCappGSmoq7vROz1YwmNBQFYrEYQlGwJzmIRaPA8b7piqJgMMja
      m3Tu4iIA0ZCfzu4+8orK0INuQiKF/AwXTa2dlFZUEg2lgBYjqonRznAX8kMa0vSJ2+cBJiOf
      B5CmiqxHSAlNBkBKaDIAUkKTAZASmgyAlNBkAKSEJgMgJTQZACmhyQBICW1aAyCEYHjYzaHa
      vQQi6nSuWpImNK4vUHd7M0MjAUor5+LpbcWemkF/7xAFBTmkJJ/bx9mEFmPX1lcIqS5w5TG/
      /PirDoUQqKqK0WQCXUegYDAoqKqGyWQc85JW2QdImkonBEDF7YuxYP5c6g7W09PbS2mRj0G/
      DcfwMMGRIdwhnVS7kSG3l4qaBTjMp38SMRjNmLFQtngR6Zlpo8NDfjcd3QPEdNBCfiLCSGGG
      kyFfEFdGPnrYTTAQZu78BZjk/i9NoRMCoKBpMdRYBKPNSVFxCaXF6dj8DoLudsJCYc6cOeze
      9hZJqRloqg5nEABdixHwDzIwMEAMC5nJx88A9qQUTEofaZmpeHzJpOkB3BHB/Plzj38ou/kQ
      xYvWYFSOd53WdR1VlVUo6dydEAAjRXmZNLZ0U1FZSdA3gtFiJc1lxmXJxWKE5tYO5s6roXfI
      h81yZp+mUTWdgtJqWnsHWLxkyejw3pYj9Hoj2FPNhD1teDBRnOWitraOzPxSiqsXEh7uIpqV
      gtVkxGAwYDLFRU9uaZab1u7QOzevp6VrgGA4wtUf/iQl2WfXppDdoaWpMq7+Egr48Xj9k86k
      ayqqqhF55ymt03XRyisR/i6E0Uo4EjuzkkrSeTCuEVxff4ScggJMisBmsxCOqgz19eBIy8Ei
      wgx4guQkm/BoduxmhYA6RBgrTpPGcEClpCiPk7VTFcXARauu40BdIw7b+C+NS9J0M534a05W
      Cn29AwS9bgrys+gZ8qIIKwM9HZgMRgrSrbQMhUhJNtM/5GWwow2DzUVWehImqwsh4GRXKg8f
      OUpuiotgVMNslnV4aeadUAVSCQYjCF3DYjFwrLEFDEb6uzsQJhuxSIDGzmEykx2YjEYsZgup
      qS6yc3JIdTnxuIfQJmlR9HQ08eqWfVy/ahnDbu/53TJJOg2nbATrapghT5iszFT6evvIyc05
      65WFAl7CqgGHxYBitmE5y6+9yEawNFXkQ/FSQpOd4aSEJgMgJTQZACmhyQBICS1OAnC8O7QQ
      oKkxYqqKEIJIJIIQAl3X0TWNWdhel04gdA0RC573/6WIBonufxyhTd7jIC7uRkWDPrbs2s+a
      VSs5dOAgEYzkpyXhCYZxpOYgIh6CgQg1C+ZzZt3vpHggYiG0zt2o7dvR++rQ/X3Yrr0PU/Fl
      52d9ukb4jR+hu1sBsCy57aTTxkUALI5kCnMzQQthS80jVQ/giQpqauaM6Q5tYJZ3hxaC2M6H
      URwZmBZ+aqZLc8ZELITWsglT+VVgsp7WPHp/A7GN92PImY9SeCnm5f8AES+RV7+FuOkhFOu5
      PWQ1QSmJ7X0UTDYsNz1M9MWvQ8HFGNLKJphUi48ABL3DdHR0YnWmExnpZkSYKc52UVt7iMz8
      UkqqFxF2z/7u0GrbNkTvAfRoAEvZFRhSiyecTg+5UUw2MNni6gm4yN4n0Vu3ED30DJaV38SY
      t2TS8olYiOhbP8N23X0Ys+a+N8KZjljwCbSdD2O98ttTuo1q2zZE+9vYP/prFIsDw+p7iWz8
      KfZP/BeK8b3+Z3rIQ+SNH8kbYdNFhDwEn70D+43/ju5pJ7r3T9hvegBFGdsM03rrCK//AVjs
      KBgwZM/FmDMfU9X1KGb7DJUe9MAQoee/juOTj6AH+ols+AmGjEqsl38DxeIcN70Qgsjmn2Fw
      5WFZ9rnx43WN0It3Ylnyd5hKVkxNGb3dhNbehf3GX2BILhgdHtn2wPG/YcVVAGh9hwi/eT+W
      i74AYhbyeDwzXYQzouuaCL7ybRFteEnoui50XReh9T8U0foXxkynDrcI/2O3CM3dJnRNE3rI
      I2Lt20X4rV+K4At3Cl2NzlD5dRF6834RbVj73jAtJiK1Twr/n28VsebNQtf1MfPEmjeJ4PPf
      FLqmnnS5mqdD+B//tNDD3nMvY8QnAk/eLmIdu8aPi4VF4LmvCz3sE9GGl4T/z7cKdbBRCCGE
      DMA0iB5+WQRf/pbQdW10mBYcFv7HPyM0/8Dx3/2Dwv/4p4XavX/c/Lqui/DW/xTht345bkeb
      CnosLGLNm0XotR8Ita9h3HhtuFUEnvjshDuz5usTgWe+JkIbfir0iP+dYf3C/+dbhTbSdcp1
      R2r/KkJv/MtZb5eu60LtqxeBv31RRA4+fdLlRPb+Sfgfu0UEX7xLaMHh0eEyAOdAjwYmPcIJ
      IYQ20iX8f/7U6I7+ftH6F0XotR8IPRoUgb9+QcSaNpx8XZoqAs9/Q0QPPX+OpX7fMoNuEdn7
      mPA/dosIvf4jET36qvD/6ZNC7a17bxpdE8GXvyVirVsnLVtkz6PHA9xXL4Iv3iWiR187vTLo
      mgg88zURqX3ipGc4XVOF5usbt3PralSEtz8sAk98Tqg9BydfjxYTsdatQtdiY4bLNsAZEkKg
      DxwmdvAptJ4DKBYHtmvvw5A+/iqD7u0mvP77WC76hwnruULXCK+9Gz3Qj3nRpzDP+9jkjcqI
      j+CzX8O2+l6M+UtPUU59XPtidFwsRHTvo6hNGzDPuQHTvJtQ7GkoioI21ET4lX/Gdu19GHMX
      onbtJbr7f7B/9D8nL5sQ6MPNRF6/D0POfKxrvnXajVsRHiGy/SG0nlpM5VdiXngzij0dERxC
      PfwSauMbYLIiwiMoSZkYM6sxZJQTO/g0xsKLsFz6FRSj5bTWdSIZgEkIIUBoEAshgkNo/Q3E
      Dj0HBiOWRbdiLL4Mre8Qkc0/w7Ls9uMNVYMREQ0Q3fsoWvt2LBd9EWPZ6pPuDPpIF1rXHkw1
      HzmtHUZ3txJa953jDT1X7sTTBIYIv3wvijMb87ybMBYsQzHZEEJHa91CZPtDmKuux7zolgkb
      sNrAUcKvfhfbNd8jsv0hrCu+gTF3wen9zbQYGIwnDd+k84a9xBpeQD22Hkw2RNR/PKDVH8KQ
      lInQYojgIFp/A/rgMUwlK0+7XCcjAzABocVQG18n1rAWERhAMTtQHOkYsqoxVV2HMb187PQh
      D+ENPwGDCVPJ5UT3PYap6josS247L1du1PYdRN9+ENsN92NILRpblliI0AvfxLz40xgcmcTq
      X0Dr2Yex5AqEtwsA6xV3jZvvRNrgMUJr78JUsBzrtfdN6+VYoauIkS6UlEIUw/m99SkD8D4i
      GiB25BVidc9gLFyOZf4nUVILQTGc8ogmhECtfx6t7xCWi7+I4sw9bzuNEAK9p5bwhvuxXnH3
      aPVK6Crhdd/GWLAc86JbURTl+FlMjaC2bUWxpR4/G5xu1STkAZN1Ri+/nm8JEQChq4Rf/S6G
      5AJMZWswZFWjmG3Hd45YCH2oEbVtG2rzRkzFl2Je8ncYnNnncQumhu7tJvza9zFVXo150a1E
      tz0Auopl1V1nVQVJRHEbAHdfF209A+QVV6CGRoiEghSXV2EyKGd1BtADg2hde1GbN6IPHsOQ
      WYkIDIEaRkktxlR0CcaSlRiSMs7TFp0fIhYi/Ob9CG8XijMb2/U/HnPHU5pc3Aag8dgxyitK
      aGzuobf1AIU1l1NecHznPJcq0LsNW324BcWajOLMmvVHSyEEWts2jAVLUcyOmS7OrBK3AWhv
      PILJkUQgZsQQ8xAMCeYtqMGonN0ZQJImErcBELpKX/8Q2TnZxKJRFHQUkw2zUQZAmjqjAfD7
      /WiaNtPlOS3BYBCHQ57qpXM32qfY6Rx/QySeyTOANBVmd+tPks6RDICU0GQApIQmAyAlNBkA
      KaHJAEgJTQZASmhx8W6RoNdNS0cXjuQMVP8QYSwUZyXT0tlHYVklsZCXaChEQUkZJkP8vCZE
      mv3iIgB2ZzIm2tBiAYQlDZceomvIy8KFc2lq6aWvrY78ORfL7wRLUy4uAhAOhymrrKauvgGL
      RUNDxWIy4PX6EAYTeUWlBEaGoTALo3H2vhhLij9xsReZDNDc0k51zUK0oIeQsJCd6qC1vYvK
      0hKikTQUoRPTBBaTrAJJUydue4NORvYGlaaKvAokJTQZACmhyQBICU0GQEpoMgBSQpMBkBKa
      DICU0GQApIQmAyAltGkNgBA6nV1dbHztZYb9kelctSRNaHoDoKns2PACqslJ74D7veFCo6er
      k1BUJeD14B7xI3SVnp5e9Hc+mB0JBdFmX68NKc5Na2c4xWgiJyuP7NIy0tPf+z5s2O/D4kii
      8ehhEAZAw2MzY3O6aGrvxRDzEIoozJ9XPZ3FlRLAtAZAaCqe4V4CzY3EFDOZKcff7ma1O2g5
      fISS4gJ6B8JYRRC/plOSk4WvuYeulkYKao6/A18+DyBNpTEB0KIh6g7WEiGJpUsXYn5fBckz
      2I0lJR/HBG/ejoV9DHii5OdO/mrxrs42rCm5dPX2cemKlaPD+ztaCOkK/rBAhAdxCzMl2ckc
      OFBPXkkFSY5lREPDRLX0Wf2hbCn+jOsOPTLQgV9JIzzYTHvPMMXFRfiDIVJsBoYCGinpmXh6
      mtDMLnKSrYz4gqRlZ6NGYgwNDmG0O1i2cN6EK2trPMzQSICYqlI1bzHpLttZFVp2h5amykkb
      wR6vn5KSEqKRMMWlpVisFqqqq1GESnp2HplpLkIRjdLCbAKhCGhhrMnZmBWBrusIXefERw2K
      yypoPrCFuoajDHlD533jJOlUxtUjklKysSkmshYtpqt3mDnVc+nu7CQjOx+LxUR+TjagA2A2
      QGfvMHPKionGBIGRQYyOMvx+PxajAcXmwGp8/xNcCjVLL6GuoQ2TvAMhnUe60NnbuYtlhRdj
      mOQDKOPGmCxWrGYjFlsSZaVFGI1GikpKcNgdmIwG7DYrdpsdu82OyWKntLgAo9GM3WYhMyef
      NJeD5ORkbElOrMaxi29qbaO4sBBhMJHsvHA/vCbNvN3tO3hg888ZCgxOOt20HofbW47xxuZd
      XLVyyZj7AJI0lVRN5eX657lh7o3s7dg16bTTGoDlS5eyfMUqnCmZlBfG/1cYpdlpb+cuClNL
      +EDNjezp3DGuLfp+0xqAlIwcivKySHKlYrec3w8gS4lJ1VVeaXiBD8+/iTRHOmajhT5f70mn
      l01RaVoJIYiq0UmPyufiQNc+8pILyEvOB2BpwUXs69p90ullAKRp1e5u5X89+1V6vN1Tvmxd
      6Lzc8AIfmvfR0WHLiy5hb8fOk84jAyCdkUDEjy70s5p3ODDEI9t/w5rKa3i79a0pLhkc6jlA
      hiOTgpSi0WGp9jRMBjNdI50TziP7E8QxTddod7eyr3M3K8vXkOPKndHytAw18Zstv8JhSSI/
      uYDq7BrKMirISynAbDCjKCd/a184FuKhrb/i5sWfYU72XP719R/xsYU3YzRMzS6o6RprDz3H
      5y/50phyKIrCxSWXMeDvpyClcMw8zUONMgDxqG24hW0tb3G4/xC5rjwyndmsPfQs/3DZHTNa
      rhcPPcMXLv0qFZlVNA810jrczPMHn6LP14vNbKcqq5rS9HLKMyrJduWMzqfqKr99+0EuK72C
      xQXLAMhIyqTT00FJetmUlO1Q70FS7KnkJReMG3dR0WW8dOg5lryzboDDffX8Ze8f4yMA0aCX
      rbtrWX3F5dTX7ickTJRkJdM96CYzvxQt5CEUCFFVM++Cfj26EILtbVt57fBLfHj+x/jYoluw
      m+1EtSj/su67BKJ+kiwz8znbfl8vvrCX6uwajAYjNTnzqcmZzwfm3ogmNHxhL63DzTQNHmNz
      05t4wyPkJuczN3seXSOd5Dhzubrq+tHlXVJyOW81b5ySAIRjIZ478Fe+vOLrE56FXFYXQ8FB
      YloMk8HEge59PHfwb3xj1T3xEQCLI5mCnAzQQlhT8knRAwwGVRYvXkBTUw/dzQcoXrTmgn89
      +o62bWxufpM7V30Lp/X4jq6qKgYMLCu8mC1Nm7im6obzsu5ANEBdz36WFCzHahrfSXFdw0us
      qbgGoQtUffzf3mVJZmHuEhbmLgEgrIbpHunk2MAR0mxp3FBz45gPsc/Nms8LB58mEo1gNJzb
      JfHnDz7NwrwlZCXlnHS/UAQ09h8lGAvw7MG/8vWVd5NmS4+PAIT8I3R3d5OUmknI08MIBvLT
      ndTXH8GZnkdR1XyCgx3EslOwzOLXo3vDXup69mMz21mQuxiLyTI6bkvTRt5u3cI/rb6XJOv4
      o/xVc67jlxv/H9dWf+Ccd5j3G/D3s67hRY4OHCYrKZtjg0f4/CVfHnMk9YZHONx/iNuWfx6T
      8fT+7k6Tkzm2uczJmTvh+BRTCvkphTS7G6nJmX/W5W8dbuZIfz3fvu6+Sct2aelKntz/JxRF
      4a4r/w8ZSZlAnDSCrXYnKy5fhcFoJDczHYGC0WAgK6ZiNpsQIh1g0kZWPBJCMMxafjsAAAjJ
      SURBVBwcYk/HDg721BKMBliQt5hwLMzT+5+gPLOSNRXX0OZuYU/HTr65+h7sZseEy0qxpZLl
      zOHowOFz2mHeNRQY5JkDT9Lv62NN5dV8etntGBQDv9j4U/Z27mZ50cWj025sfIMrK6857Z3/
      dK2quJIdrVuZmz3vrP63qhbj8d1/4HMXfwmz0TLptIvyl3B0oIEPz/sYKfbU90aIWcjj8cx0
      EU5Lp6ddfHftPWJt3bOiy9MpNE0bHReKBsXejt3iwbd+Kf5j47+JYDRwyuU19NaJB9/65TmV
      Sdd1cbT/sPju2nvE7vYdQtViY8YPBQbF99beKzxB92g5/+9L/1v4wt5zWu9EIrGw+N5L94rY
      CWU4Xevq14rHdv1e6Lp+1mWIizPAbOUODuOyJk94ZAzHQvz32w/x95d8hcqsOePG28x2lhYu
      Z2nh8tNe35ysuTyx7zE8QTepjrQzLq8Qgg2N69nU+AbfXH3vhJdV0x0ZfHDeR/njzt/xjdX3
      sL1tK/NyF+K0us54fadiMVkpS6/gcN8hFuQtPul0A/5+drdvx2FJItuVS4Yjg5iusqVlE9++
      9r5zqhnIAHB8x+jwtJFiSx17epxAWA1T33OQt5o3MhQYwGFJ4o6Vd46ZTxc6f9z5CCvKVk24
      858tg8HIipKVvNW8kY8s+PgZzRuMBnli76OEYiH+z7X3YTefvDv6itIrONRzgA3H1rOleSNf
      X3X3OZb85C4rvYKNx9ZPGIBANMC6hrXs79zNlVXXEogGeLt1C8OBQbzhET6z7HYclomrjKcr
      4QOgC523mjaw4dh6NKFxx8o7yT/hhglAKBbkhbpnONC1j+rsGj4y/+OUpJexp2Mnv9z4r3xz
      9d1kJGUhhGDjsdcRCK6ZM/VXbFaUrebnG+7nQ/M+OmljWNVV+rw9HOyppaGvDm94hEuKL+f6
      uR86ZSNaURRuW/55frju21RmVZOZlDXVmzGqOruGR3c9QjAaxG62o+oqIyEPtd17eePoq1xR
      fiXfu+HHWE3W87L+hP5EkqarPLX/L/T6evjyim/QNdLBozsf4QuXfpXyzMrR6VqHm/nDzt9x
      WclK1lReM+7oebivnkd3PcIdK+9EFzr/s+NhvnXND8756HQyv9v2IJeUrBi9qXSiup5anq59
      AqfFxcL8JczPW0Recv6kT0ZNpHukiyRL0inPiufqT7v+m35/H6FokKgWJcnqpDJzDtdXfwiX
      LfnUCzgHCRuAUDTIb99+kFxXLp9c8hlM79yS7/F285stv+LmxZ9mQd5iXj/yCm+3buH2S75E
      eUblhMt6twr18NZfowuNr6+6h6LU4nMq32Q63MfXdXnZKi4puZws5/FnK/wRP0/V/oU+Xw+f
      v/hL5LjyZsWVs3AsTLu7lfyUAuxmOwbFOG3lTqgA6EKn39fHtpbN7O3cxbVzPsCaymvG/bHd
      wWH+Y9PPMBlN5KcUctuy27FNUmd+V7+vj5Gwh6qs8/sCLyEE7tAwO1q3srtjB0kWJzU5C9ja
      sonVFVdz9ZzrRwMtTS4hAiCEYHvrVjYcew1FMXB52WqWF1086ZWNUCxEh7uVOdk1U1Hk80YI
      QddIBwe7a1lauJzcd/rBS6cnbgPgHeqjpbOXwrIqYiEvsVCIvOJSTAbljAOg6SpbmjdRnT2P
      HFfurKgWSNMjbp8H6B/2smDBXIb6Bzh2aC9Ro+OsO8IZDSbWVF5DbvLsqBNL0yduA2AUGj6/
      H2EwkltQTGDEQ1yeqqRZLW5bSiXl5bS0dVFRVko0nIYiNGKqjkW+UUuaQqNtAL/fP6a7ajwL
      BoM4HOfnGruUWEbPAE7nzDxocbbe3wjWdR2DwTDmd0VRxtT3NU3DaDROOs/7f3/32sD7lxFP
      8+i6fkbbc+LvpzvPiX/HeJpnSrYvXq8CTeZs7gMIIS6YBvBEoZnNZnJ74rYNMNUulJ0FLqxt
      gZndngsyAJ6hXjp7+nGl5eAb7EaxJVOQkURj1yBLayo42tiEpthYUDNx14Z409/TTt/AEJnZ
      BfT2dONMzSTFqtM7EqG6OJvG1k7MNhdzKs5f94up1NnWxMCQl6KiPDq6+kjPzscQHCBkTmNO
      SR6H9u0go3QhuWnnv513QV5SSUnPISXJBloQV3oxDkXHkZFDktWIwWyjIDcbk3n2ZD8rJx+H
      zYJv2ENJ9TyIhcjKK8KsqFjsLsyKytm9qWdm5OUXYrWYGe73ULN4EVG/h/zCIoQew93fhdme
      jKpOzwWZCzIAXS1H0SwpZGek4/cNEYhE0aMRQqEQQe8QTV1DFBXM7Dt2zkTTkQYcabnkZiUx
      0NdPRNWJhEOEQiECfj9Z+SWEfCMzXczTJGioryenoIi0ZDN9vf3EdIVwKEQoGCIYjuJ1D9A/
      ODwtpbkgG8E+zzBur5+U9CyUWADF6kIP+xjxB3G5XPh9Pky2JPKyJ/+mWbxwD/bjC4bJzM4j
      7BvGnpJB0DNAIBwjPSMTz/AQ6dm5OKwTfMAt7ggGensIRTVy8/PwDA6QlpXDcF83EVUnt6AY
      o4iiCSMW8/l/gfIFGQBJOl0XZBVIkk6XDICU0GQApDgk6O3uQQeG+nsJRU/+FkDviHfCTpLu
      wT58wQhC1+hsbyUciY0ZPzLiBS7Q+wDSbKfx4uO/5crP38uG3z/ExbfcgXGkk5ziKnyDXXjD
      OtGeY/TZi9D6GimpmMP8xUswaUH21zZQVlHE//z3o9z2xTs4tnsz5vwq2g+3kO8U6CY7QfcA
      u+oaufHqy+QZQIpPhXMX0bZrPUkZJbQf3ErMVcy2za+zp7aBno4m7EnJVFZVIDBgDrppHfKx
      8Y03Ka8uZuv2g1RVzaMgy0XvkJ85FaUMDId58803ECMd9KoppDhMvPzyK/IMIMUjhZS0HIZ6
      O1mwoBItKZXuxloycouJhYJYTDqZedkcaGoiPSOTJJcTg8nInPIS9uw6QFF5Ge7u41+gWbp4
      Dps3bKKmooIOUU1haTm1Gw+gmJMoLrLIy6BSYpNVICmh/X/j3OTzJLdU/gAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
